;(equal? (quote a) 3) 
(equal? #t 't)
(equal? "abc" 'abc) 
(equal? "hi" '(hi))
(equal? #f '()) 
(equal? 4.5 3.5) 
(equal? 3.4 53344) 
(equal? 3 3.0)  
(let ((x (* 12345678987654321 2)))
  (equal? x x)) 
(equal? #t #t) 
(equal? #f #f)
(equal? #t #f) 
(equal? (null? '()) #t) 
(equal? (null? '(a)) #f) 
(equal? (cdr '(a)) '()) 
(equal? 'a 'a) 
(equal? 'a 'b) 
(equal? '(a) '(b)) 
(equal? '(a) '(a)) 
(let ((x '(a b))) (equal? x x)) 
;(let ((x (cons 'a 'b)))
;(equal? x x)) 
;(equal? (cons 'a 'b) (cons 'a 'b)) 
(equal? "abc" "cba")
(equal? "abc" "abc") 
(let ((x "hi")) (equal? x x))
(equal? car car) 
(equal? car cdr)
(let ((f (lambda (x) x)))
  (equal? f f)) 
(let ((f (lambda (x)
           (lambda ()
             (set! x (+ x 1))
             x))))
  (equal? (f 0) (f 0)))
(equal? 3.4 (+ 3.0 .4)) 